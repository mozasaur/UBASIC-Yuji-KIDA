name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: ubasic-rust-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: ubasic-rust-windows-x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: ubasic-rust-macos-x86_64
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Build release
      run: cargo build --release --target ${{ matrix.target }}
    
    - name: Create release archive
      shell: bash
      run: |
        cd target/${{ matrix.target }}/release
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          7z a ../../../${{ matrix.artifact_name }}.zip ubasic-rust.exe
        else
          tar -czf ../../../${{ matrix.artifact_name }}.tar.gz ubasic-rust
        fi
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact_name }}
        path: target/${{ matrix.artifact_name }}.*

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## UBASIC Rust ${{ github.ref_name }}
          
          ### What's New
          - Enhanced mathematical functions
          - Improved error handling
          - Better performance
          - Bug fixes and improvements
          
          ### Downloads
          - **Linux**: `ubasic-rust-linux-x86_64.tar.gz`
          - **Windows**: `ubasic-rust-windows-x86_64.zip`
          - **macOS**: `ubasic-rust-macos-x86_64.tar.gz`
          
          ### Installation
          ```bash
          # Linux/macOS
          tar -xzf ubasic-rust-linux-x86_64.tar.gz
          ./ubasic-rust
          
          # Windows
          # Extract the zip file and run ubasic-rust.exe
          ```
          
          ### Documentation
          - [User Guide](https://github.com/your-username/ubasic-rust/wiki)
          - [API Documentation](https://docs.rs/ubasic-rust)
          - [Examples](https://github.com/your-username/ubasic-rust/tree/main/examples)
        draft: false
        prerelease: false
    
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ubasic-rust-linux-x86_64/ubasic-rust-linux-x86_64.tar.gz
        asset_name: ubasic-rust-linux-x86_64.tar.gz
        asset_content_type: application/gzip
    
    - name: Upload Windows Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ubasic-rust-windows-x86_64/ubasic-rust-windows-x86_64.zip
        asset_name: ubasic-rust-windows-x86_64.zip
        asset_content_type: application/zip
    
    - name: Upload macOS Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ubasic-rust-macos-x86_64/ubasic-rust-macos-x86_64.tar.gz
        asset_name: ubasic-rust-macos-x86_64.tar.gz
        asset_content_type: application/gzip 